# -*- coding: utf-8 -*-
'''
Global (non-default) settings for the application.
Warning: the settings below can be modified by config_local.py, in such a way that accessing them 
         through config_global returns (sometimes) modified values.
For accessing the settings, you should always use config.py.

@author:  Marcin Wojnarski
@contact: mwojnars@ns.onet.pl 
'''

from collections import namedtuple
from os.path import abspath
from nifty.util import dirname


root = dirname(abspath(__file__), 4)                            # root folder of entire project, basis for construction of subfolder paths, never used directly to read/write files

src      = root + "/src"                                        # source code
libs     = root + "/src/libs"                                   # libraries
app      = root + "/app"                                        # working folder of the application, where the app can store temporary files, logs etc.
log      = app  + "/log"                                        # folder for log files
data     = root + "/data"
backup   = data + "/backup"
filebase = data + "/filebase"                                   # FileBase storage
webcache = data + "/webcache"                                   # cache of the web client used by harvester

# Database settings
class db(object):
    host = "localhost"
    user = "root"
    password = "...."               # set the right password in config_local.py
    database = "paperity"
    #@classmethod
    #def path(cls): return 'mysql://%s:%s@%s/%s' % (cls.user, cls.password, cls.host, cls.database)

# TOR
# hashed password generated by calling:  tor --hash-password password
# warning: it seems that hashed password generated can be different on each call
class tor(object):
    password = "k578^fh2.0"
    hashed_password = "16:BE6A4B5C4AAF0D2960259189492A388A1B2F7E43DCB825B0918320303F"    

cermine = libs + "/cermine-impl-1.3-SNAPSHOT-jar-with-dependencies-20140909.jar"
cermine_fallback = cermine          # a reliable version of CERMINE that should be used as a fallback when the newest one crashes

solrURL = "http://127.0.0.1:8080/solr/"

git = ""

proxyURL = "http://proxy.paperity.org:81/download/{0}"


# uWSGI settings, for generation of the config file
class uwsgi(object):
    "warning: underscores '_' in params names must be replaced with hyphen '-' when writing out the config file."
    master     = "true"
    processes  = 10
    threads    = 2
    harakiri   = 300                                            # kills a process if it executes for more than 5 mins
    # lazy-apps = "true"
    static_skip_ext    = ".py .pyc .php .conf .ini"
    static_expires     = ".* 3600"
    check_static       = src + "/paperity/web/static"
    offload_threads    = 4                                         # this should (?) offload the serving of static files to lightweight non-blocking threads (# per each process)
    static_cache_paths = 60
    # static-gzip-all ....  - to enable automatic serving of .gz copies of files if only they're present in the folder
    # load-file-in-cache <file>   - cache a given static file during startup; should be used for each file to be cached?
    
    logto = log + "/uwsgi-error.log"

# configuration of the backup server
class backupFTP(object):
    host = ""
    user = ""
    password = ""

